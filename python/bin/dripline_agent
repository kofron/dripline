#!/usr/bin/python
""" dripline_agent
Do simple stuff like gets and sets.
"""
import argparse
import uuid

from dripline.core import Node, Config, message, constants, DriplineParser



# TODO: this should be by introspection
def verb_list():
    """
    A list of acceptable verb arguments.
    """
    return ['get', 'set', 'config', 'describe']


def main(args):
    # TODO: we shouldn't have to start an entire node to do this, should we?

    # TODO: can't we use argparse to do this somehow?
    # if the request verb is not one of the accepted verbs, barf here.
    request_verb = args.verb
    if request_verb not in verb_list():
        print("ERROR: verb argument must be one of: {}".format(verb_list()))
        return -1

    conf = None
    if args.broker is not None:
        nodename = uuid.uuid4().hex[1:8]
        yaml_conf = """
        'broker': {}\n
        'nodename': {}
        """.format(args.broker, nodename)
        conf = Config(yaml_string=yaml_conf)
    else:
        conf = Config(config_file=args.config)
    node = Node(conf)

    # TODO: this block makes me sad, a dict can do this in a way that is way more flexible
    if request_verb == 'get':
        request = message.RequestMessage(target=args.target,
                                         msgop=constants.OP_SENSOR_GET,
                                         payload=args.value)
        reply = node.send_sync(request)
        print(args.target + ': ' + str(reply.payload))
    elif request_verb == 'set':
        request = message.RequestMessage(target=args.target,
                                         msgop=constants.OP_SENSOR_SET,
                                         payload=args.value)
        reply = node.send_sync(request)
        print(args.target + '->' + str(args.value) + ': ' + str(reply.payload))
    elif request_verb == 'config':
        request = message.RequestMessage(target=args.target,
                                         msgop=constants.OP_SENSOR_CONFIG,
                                         payload=args.value)
        reply = node.send_sync(request)
        print(args.target + '->' + str(args.value) + ': ' + str(reply.payload))


if __name__ == '__main__':
    agent_doc = '''
                dripline_agent provides basic a CLI to the dripline system.
                '''
    parser = DriplineParser(description=agent_doc,
                            amqp_broker=True,
                            config_file=True,
                           )
    parser.add_argument('verb')
    parser.add_argument('target')
    parser.add_argument('value', nargs='*')

    args = parser.parse_args()
    try:
        main(args)
    except KeyboardInterrupt:
        pass
