#!/usr/bin/python
""" dripline_agent
Do simple stuff like gets and sets.
"""
from __future__ import absolute_import

import argparse
import uuid

from dripline.core import message, constants, DriplineParser, Connection, Message

import logging
logger = logging.getLogger('dripline_agent')
logger.setLevel(logging.DEBUG)

def verb_list():
    """
    A list of acceptable verb arguments.
    """
    verbs = [v[3:].lower() for v in dir(constants) if v.startswith('OP_')]
    return verbs


def main(args):
    request_verb = args.verb
    msgop = getattr(constants, 'OP_'+request_verb.upper())
    conn = Connection(args.broker)

    values = []
    for val in args.value:
        temp_val = val
        try:
            temp_val = float(val)
            temp_val = int(val)
        except ValueError:
            pass
        finally:
            values.append(temp_val)

    request = message.RequestMessage(msgop=msgop, payload=args.value)
    reply = conn.send_request(args.target, request)
    if not isinstance(reply, Message):
        result = Message.from_msgpack(reply)
    else:
        result = reply
    print_prefix = '->'.join([args.target]+args.value)
    print('{}: {}'.format(print_prefix, result.payload))


if __name__ == '__main__':
    agent_doc = '''
                dripline_agent provides basic a CLI to the dripline system.
                '''
    parser = DriplineParser(description=agent_doc,
                            amqp_broker=True,
                            config_file=True,
                            tmux_support=True,
                            twitter_support=True,
                            extra_logger=logger,
                           )
    parser.add_argument('verb', choices=verb_list())
    parser.add_argument('target')
    parser.add_argument('value', nargs='*')

    args = parser.parse_args()
    try:
        main(args)
    except KeyboardInterrupt:
        pass
