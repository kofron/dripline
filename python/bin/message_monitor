#!/usr/bin/python
'''
message monitoring port based on service class
'''

from __future__ import absolute_import

import logging

from dripline.core import DriplineParser, Service

logger = logging.getLogger("monitor_service")

def start_monitoring(**kwargs):
    example = Service(amqp_url = kwargs['broker'],
                      exchange = kwargs['exchange'],
                      keys = kwargs['keys'],
                     )
    example.run()

if __name__ == '__main__':
    monitor_doc = '''
                  a more DRY version of message_monitor
                  '''
    parser = DriplineParser(description=monitor_doc,
                            amqp_broker=True,
                            config_file=True,
                            tmux_support=True,
                            extra_logger=logger,
                           )
    parser.add_argument('-e',
                        '--exchange',
                        metavar='exchange name',
                        help='amqp name of the exchange to monitor',
                        default='alerts',
                       )
    parser.add_argument('-k',
                        '--keys',
                        metavar='keys',
                        help='amqp binding keys to follow',
                        default='#',
                        nargs='*',
                       )
    kwargs = parser.parse_args()
    
    try:
        start_monitoring(**vars(kwargs))
    except KeyboardInterrupt:
        logger.info('exiting')
